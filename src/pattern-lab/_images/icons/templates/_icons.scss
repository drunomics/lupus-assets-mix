/**
 * When updating or adding new icons the version number has to be increased.
 */
$icon-font-base-name: "{{ fontName }}";
@font-face {
  font-family: $icon-font-base-name;
  src: url("{{ fontPath }}{{ fontName }}.eot?v=1.0.1");
  src: url("{{ fontPath }}{{ fontName }}.eot?#iefix&v=1.0.1") format("eot"),
  url("{{ fontPath }}{{ fontName }}.woff?v=1.0.1") format("woff"),
  url("{{ fontPath }}{{ fontName }}.ttf?v=1.0.1") format("truetype"),
  url("{{ fontPath }}{{ fontName }}.svg?v=1.0.1#{{ fontName }}") format("svg");
  font-weight: normal;
  font-style: normal;
}

$font-icons: ({% _.each(glyphs, function(glyph) { %}
  {{ glyph.name }}: "\{{ glyph.content }}",{% }); %}
);

/**
 * Mixin - Icon
 *
 * Icon stack:
 * 1. 00-config/_icons.scss (autogenerated)
 * 2. 10-base/_icons-base.scss (here)
 * 3. 30-global/_icons-application.scss (Generate default classes)
 */

@mixin font-icon-base() {
  font-family: $icon-font-base-name;
  display: inline-block;
  vertical-align: middle;
  line-height: 1;
  font-weight: normal;
  font-style: normal;
  speak: none;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
}


@mixin font-icon-replace($pseudo) {
  position: relative;
  right: 9999px;
  &:#{$pseudo} {
    position: absolute;
    height: 100%;
    text-align: center;
    top: 0;
    right: -9999px;
  }
}

/*
 * Main Icon mixin
 *
 * Can be called like @include icon($vars) { background: something; } using the
 * power of @content.
 */
@mixin icon(
  $icon: "search", // just a default
  $pseudo: before,
  $text-replace: false,
  $size: inherit,
  $color: inherit,
  $block: false
) {
  &:#{$pseudo} {
    @include font-icon-base();
    content: map-get($font-icons, $icon);
    font-size: $size;
    color: $color;
    @content;
  }
  // Replace text with icon, like classic sprites
  @if $text-replace {
    @include font-icon-replace($pseudo);
  }
  // Get around fighting with line-heights
  @if $block {
    display: block;
  }
}

/**
 * Font application to generic DOM
 */

//@font-face {
//  font-family: $icon-font-base-name;
//  src: $icon-font-source-1;
//  src: $icon-font-source-2;
//  font-weight: normal;
//  font-style: normal;
//}

// Everything with .{{ classNamePrefix }}--something has a base set of styles in order to view
[class*="{{ classNamePrefix }}--"] {
  @include font-icon-base;
}

// Print .icon--thingy classes using default :before for easy elements
@each $icon-name, $icon-symbol in $font-icons {
  .{{ classNamePrefix }}--#{$icon-name}:before {
    content: map-get($font-icons, $icon-name);
  }
}
